name: Publish
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'

      - name: Restore cached npm dependencies
        uses: actions/cache/restore@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress # needed for the Cypress binary
          key: npm-dependencies-${{ hashFiles('package-lock.json') }}

      - run: npm ci

      - name: Cache npm dependencies
        uses: actions/cache/save@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress # needed for the Cypress binary
          key: npm-dependencies-${{ hashFiles('package-lock.json') }}

      - run: echo VITE_CLIENT_BASE_URL= >> .env.local
      - run: echo VITE_CLIENT_STORAGE_URL= >> .env.local
      - run: echo VITE_CLIENT_ASSET_URL= >> .env.local
      - run: echo VITE_CLIENT_PUBLIC_PATH= >> .env.local

      - run: npm run lint
      - run: npm run test
      - run: npm run build
      - run: npm run package

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'

      - uses: actions/download-artifact@v4
        with:
          name: dist

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ env.NPM_TOKEN }}
          access: public
          package: dist/libs/api/package.json

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ env.NPM_TOKEN }}
          access: public
          package: dist/libs/cli/package.json

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ env.NPM_TOKEN }}
          access: public
          package: dist/libs/code-resolver/package.json

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ env.NPM_TOKEN }}
          access: public
          package: dist/libs/exception/package.json

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ env.NPM_TOKEN }}
          access: public
          package: dist/libs/legacy-api/package.json

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ env.NPM_TOKEN }}
          access: public
          package: dist/libs/postmate/package.json

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ env.NPM_TOKEN }}
          access: public
          package: dist/libs/schema/package.json

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ env.NPM_TOKEN }}
          access: public
          package: dist/libs/util-functions/package.json

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ env.NPM_TOKEN }}
          access: public
          package: dist/libs/validator/package.json

  build-platform-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.SWR_REGISTRY }}
          username: ${{ secrets.SWR_USERNAME }}
          password: ${{ secrets.SWR_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.SWR_REGISTRY }}/shukun-dev/platform

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: platform

  build-hub-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.SWR_REGISTRY }}
          username: ${{ secrets.SWR_USERNAME }}
          password: ${{ secrets.SWR_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.SWR_REGISTRY }}/shukun-dev/hub

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: hub
