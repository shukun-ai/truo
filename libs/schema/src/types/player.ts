/* eslint-disable */
/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * This interface was referenced by `PlayerRequests`'s JSON-Schema definition
 * via the `patternProperty` "^(\w)+$".
 */
export type PlayerRequest = PlayerFetchSourceQuery;
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^(\w)+$".
 */
export type PlayerPageTree = string[];

/**
 * Define the player contained Stores and UI Elements
 */
export interface PlayerSchema {
  shares: PlayerShares;
  requests: PlayerRequests;
  pages: PlayerPages;
}
export interface PlayerShares {
  [k: string]: PlayerShare;
}
/**
 * This interface was referenced by `PlayerShares`'s JSON-Schema definition
 * via the `patternProperty` "^(\w)+$".
 */
export interface PlayerShare {
  persist?: ['localStorage', 'sessionStorage'];
  [k: string]: unknown;
}
export interface PlayerRequests {
  [k: string]: PlayerRequest;
}
export interface PlayerFetchSourceQuery {
  type?: 'SourceQuery';
  atomName?: string;
  query?: {
    /**
     * The filter should be validate by custom program.
     */
    filter?: {
      [k: string]: unknown;
    };
    select?: {
      /**
       * The style is like MongoDB.
       *
       * This interface was referenced by `undefined`'s JSON-Schema definition
       * via the `patternProperty` "^(\w)+$".
       */
      [k: string]: boolean;
    };
    sort?: {
      /**
       * The style is like MongoDB.
       *
       * This interface was referenced by `undefined`'s JSON-Schema definition
       * via the `patternProperty` "^(\w)+$".
       */
      [k: string]: 'asc' | 'desc';
    };
    limit?: number;
    skip?: number;
    count?: boolean;
  };
  [k: string]: unknown;
}
export interface PlayerPages {
  [k: string]: PlayerPage;
}
/**
 * This interface was referenced by `PlayerPages`'s JSON-Schema definition
 * via the `patternProperty` "^(\w)+$".
 */
export interface PlayerPage {
  elements: PlayerPageElements;
  root?: string[];
  tree: {
    [k: string]: PlayerPageTree;
  };
}
export interface PlayerPageElements {
  [k: string]: PlayerPageElement;
}
/**
 * This interface was referenced by `PlayerPageElements`'s JSON-Schema definition
 * via the `patternProperty` "^(\w)+$".
 */
export interface PlayerPageElement {
  element: string;
  inputs?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^(\w)+$".
     */
    [k: string]: string;
  };
  outputs?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^(\w)+$".
     */
    [k: string]: string;
  };
}
