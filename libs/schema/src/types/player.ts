/* eslint-disable */
/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^(\w)+$".
 */
export type PlayerRepository =
  | PlayerRepositorySimple
  | PlayerRepositorySourceQuery
  | PlayerRepositoryTransformer;
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^(\w)+$".
 */
export type PlayerEvent =
  | PlayerEventSetRepository
  | PlayerEventTriggerRepository;
export type PlayerTreeNode = string;

/**
 * Define the player contained Stores and UI Elements
 */
export interface PlayerSchema {
  $schema?: string;
  title: string;
  entry: string;
  containers: {
    [k: string]: PlayerContainer;
  };
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^(\w)+$".
 */
export interface PlayerContainer {
  type: 'page';
  repositories: {
    [k: string]: PlayerRepository;
  };
  events: {
    [k: string]: PlayerEvent;
  };
  widgets: {
    [k: string]: PlayerWidget;
  };
  root: PlayerTreeNode[];
  tree: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^(\w)+$".
     */
    [k: string]: PlayerTreeNode[];
  };
}
export interface PlayerRepositorySimple {
  type: 'Simple';
  [k: string]: unknown;
}
export interface PlayerRepositorySourceQuery {
  type: 'SourceQuery';
  atomName: string;
  query: {
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface PlayerRepositoryTransformer {
  type: 'Transformer';
  func: string;
  [k: string]: unknown;
}
export interface PlayerEventSetRepository {
  action: 'setRepository';
  target: string;
  path: string[];
  [k: string]: unknown;
}
export interface PlayerEventTriggerRepository {
  action: 'triggerRepository';
  target: string;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^(\w)+$".
 */
export interface PlayerWidget {
  tag: string;
  parentSlot?: string;
  properties: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^(\w)+$".
     */
    [k: string]: string;
  };
  events: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^(\w)+$".
     */
    [k: string]: string[];
  };
}
